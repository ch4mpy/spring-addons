scheme: http
client-uri: ${scheme}://localhost:${server.port}
issuer-uri: http://localhost:7080/auth/realms/spring-addons
client-id: spring-addons-user
client-secret: change-me

server:
  port: 8080
  ssl:
    enabled: false
      
spring:
  application:
    name: resource-server_with_ui
  security:
    oauth2:
      client:
        provider:
          sso:
            issuer-uri: ${issuer-uri}
        registration:
          login:
            provider: sso
            authorization-grant-type: authorization_code
            client-id: ${client-id}
            client-secret: ${client-secret}
            scope: 
            - openid

com:
  c4-soft:
    springaddons:
      oidc:
        ops:
        - iss: ${issuer-uri}
          authorities:
          - path: $.realm_access.roles
        resourceserver:
          permit-all: 
          - /actuator/health/readiness
          - /actuator/health/liveness
          - /v3/api-docs/**
          - /api/public
          - /favicon.ico
        client:
          security-matchers:
          - /login/**
          - /oauth2/**
          - /
          - /ui/**
          - /swagger-ui.html
          - /swagger-ui/**
          - /logout/**
          permit-all:
          - /login/**
          - /oauth2/**
          - /logout/**
          - /
          - /ui/**
          - /swagger-ui.html
          - /swagger-ui/**
          - /error
          client-uri: ${client-uri}
          post-login-redirect-path: /ui/greet
          post-logout-redirect-path: /ui
          pkce-forced: true
      rest:
        client:
          greet-client:
            base-url: ${client-uri}/api
            authorization:
              oauth2:
                oauth2-registration-id: login
        
logging:
  level:
    org:
      springframework:
        security: DEBUG
        boot: INFO
            
management:
  endpoint:
    health:
      probes:
        enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true


---
spring.config.activate.on-profile: auth0

issuer-uri: https://dev-ch4mpy.eu.auth0.com/
client-id: FmmE9gRq27FcnHaWGLsGTONcWfPdJOtm

com:
  c4-soft:
    springaddons:
      oidc:
        ops:
        - iss: ${issuer-uri}
          authorities:
          - path: $['https://c4-soft.com/user']['roles']
        client:
          # Auth0 requires an audience parameter with the authorization request
          # Set the following value with an enabled "API" for the Auth0 "application" you configure as client-id
          authorization-params:
            login:
              audience: demo.c4-soft.com
          # For older Auth0 instances, RP-Initiated Logout wasn't the default
          # So, if end_session_endpoint is not par of the OpenID configuration
          # The following is necessary (check .well-known/openid-configuration) 
          #oauth2-logout:
          #  login:
          #    uri: ${issuer-uri}v2/logout
          #    post-logout-uri-request-param: returnTo
          #    client-id-request-param: client_id

---
spring.config.activate.on-profile: javascript
      
com:
  c4-soft:
    springaddons:
      oidc:
        client:
          csrf: cookie-accessible-from-js
          oauth2-redirections:
            rp-initiated-logout: accepted

---
spring.config.activate.on-profile: ssl
      
scheme: https
server:
  ssl:
    enabled: true
          
          